{"ast":null,"code":"var _jsxFileName = \"/Users/teodora/Documents/my_projects/notepad/src/App.js\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"This is my first note!\",\n    date: \"15/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"This is my second note!\",\n    date: \"20/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"This is my third note!\",\n    date: \"27/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"This is my new note!\",\n    date: \"27/05/2021\"\n  }]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {}, []);\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify());\n  }, [notes]);\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && \"dark-mode\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"H/q5joHN729MCxpXxUekMxmLxz0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["nanoid","useEffect","useState","NotesList","Search","Header","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","setSearchText","darkMode","setDarkMode","localStorage","setItem","JSON","stringify","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","className","children","handleToggleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","handleAddNote","handleDeleteNote","_c","$RefreshReg$"],"sources":["/Users/teodora/Documents/my_projects/notepad/src/App.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"This is my first note!\",\n      date: \"15/04/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my second note!\",\n      date: \"20/04/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my third note!\",\n      date: \"27/04/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my new note!\",\n      date: \"27/05/2021\",\n    },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify());\n  }, [notes]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode}></Header>\n        <Search handleSearchNote={setSearchText}></Search>\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        ></NotesList>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}