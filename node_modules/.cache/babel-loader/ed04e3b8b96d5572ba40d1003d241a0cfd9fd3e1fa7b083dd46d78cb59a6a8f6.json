{"ast":null,"code":"var _jsxFileName = \"/Users/teodora/Documents/my_projects/notepad/src/App.js\",\n  _s = $RefreshSig$();\nimport { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"This is my first note!\",\n    date: \"15/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"This is my second note!\",\n    date: \"20/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"This is my third note!\",\n    date: \"27/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"This is my new note!\",\n    date: \"27/05/2021\"\n  }]);\n  const [searchText, setSearchText] = useState(\"\");\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      handleSearchNote: setSearchText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n      handleAddNote: addNote,\n      handleDeleteNote: deleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9c9l3/TdH959+a+11QcVjnFMKKQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["nanoid","useState","NotesList","Search","Header","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","setSearchText","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","handleAddNote","handleDeleteNote","_c","$RefreshReg$"],"sources":["/Users/teodora/Documents/my_projects/notepad/src/App.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { useState } from \"react\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"This is my first note!\",\n      date: \"15/04/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my second note!\",\n      date: \"20/04/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my third note!\",\n      date: \"27/04/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my new note!\",\n      date: \"27/05/2021\",\n    },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n  return (\n    <div className=\"container\">\n      <Header></Header>\n      <Search handleSearchNote={setSearchText}></Search>\n      <NotesList\n        notes={notes.filter((note) =>\n          note.text.toLowerCase().includes(searchText)\n        )}\n        handleAddNote={addNote}\n        handleDeleteNote={deleteNote}\n      ></NotesList>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CACjC;IACEU,EAAE,EAAEX,MAAM,CAAC,CAAC;IACZY,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,EAAE,EAAEX,MAAM,CAAC,CAAC;IACZY,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,EAAE,EAAEX,MAAM,CAAC,CAAC;IACZY,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,EAAE,EAAEX,MAAM,CAAC,CAAC;IACZY,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMe,OAAO,GAAIJ,IAAI,IAAK;IACxB,MAAMC,IAAI,GAAG,IAAII,IAAI,CAAC,CAAC;IACvB,MAAMC,OAAO,GAAG;MACdP,EAAE,EAAEX,MAAM,CAAC,CAAC;MACZY,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAEA,IAAI,CAACM,kBAAkB,CAAC;IAChC,CAAC;IACD,MAAMC,QAAQ,GAAG,CAAC,GAAGX,KAAK,EAAES,OAAO,CAAC;IACpCR,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAIV,EAAE,IAAK;IACzB,MAAMS,QAAQ,GAAGX,KAAK,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKA,EAAE,CAAC;IACvDD,QAAQ,CAACU,QAAQ,CAAC;EACpB,CAAC;EACD,oBACEd,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA,CAACF,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACjBvB,OAAA,CAACH,MAAM;MAAC2B,gBAAgB,EAAEf;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAClDvB,OAAA,CAACJ,SAAS;MACRO,KAAK,EAAEA,KAAK,CAACa,MAAM,CAAEC,IAAI,IACvBA,IAAI,CAACX,IAAI,CAACmB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAClB,UAAU,CAC7C,CAAE;MACFmB,aAAa,EAAEjB,OAAQ;MACvBkB,gBAAgB,EAAEb;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtDID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAwDT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}